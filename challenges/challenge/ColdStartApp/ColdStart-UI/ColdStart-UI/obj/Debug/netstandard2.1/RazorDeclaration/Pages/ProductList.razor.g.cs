#pragma checksum "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\Pages\ProductList.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "28cff520ef39073d5b993917b3eb165bd46cd9bf"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ColdStart_UI.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using ColdStart_UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using ColdStart_UI.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
    public partial class ProductList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 95 "C:\My Projects\ColdStart-Challenge-2021\challenges\challenge\ColdStartApp\ColdStart-UI\ColdStart-UI\Pages\ProductList.razor"
       

    private Catalog[] catalogs;
    private RecommendationDetail recommendationDetails;
    private Catalog recommendedIceCream = null;

    protected override async Task OnInitializedAsync()
    {
        catalogs = await Http.GetFromJsonAsync<Catalog[]>("api/catalogs");
        if (catalogs != null && catalogs.Any())
        {
            recommendationDetails = await Http.GetFromJsonAsync<RecommendationDetail>("api/recommendation");
            if(recommendationDetails != null && !string.IsNullOrWhiteSpace(recommendationDetails.RewardActionId))
            {
                recommendedIceCream = catalogs.Where(x => x.Id == Convert.ToInt32(recommendationDetails.RewardActionId)).FirstOrDefault();
                foreach (var catalog in catalogs)
                {
                    catalog.EventId = recommendationDetails.EventId;
                    catalog.RewardActionId = recommendationDetails.RewardActionId;
                }
            }
        }
    }

    public class Catalog
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public string ImageUrl { get; set; }
        public string EventId { get; set; }
        public string RewardActionId { get; set; }
    }

    private async Task PreOrderIceCreame(int icecreamId, string userName, string eventId, string rewardActionId)
    {
        var order = new Order()
        {
            Id = Guid.NewGuid().ToString(),
            User = userName,
            Date = DateTime.Now,
            IcecreamId = icecreamId,
            Status = "New",
            DriverId = null,
            FullAddress = "1 Microsoft Way, Redmond, WA 98052, USA",
            LastPosition = null,
            RecommendationDetails = new RecommendationDetail()
            {
                EventId = eventId,
                RewardActionId = rewardActionId
            }
        };
        var response = await Http.PostAsJsonAsync("/api/order", order);
        if (response.IsSuccessStatusCode)
        {
            toastService.ShowSuccess("Your pre-order is successfully submitted!");
        }
        else
        {
            toastService.ShowError("There is some error while submitting your pre-order");
        }
    }

    public class RecommendationDetail
    {
        public string EventId { get; set; }
        public string RewardActionId { get; set; }
    }

    public class Order
    {
        public string Id { get; set; }
        public string User { get; set; }
        public DateTime Date { get; set; }
        public int IcecreamId { get; set; }
        public string Status { get; set; }
        public string DriverId { get; set; }
        public string FullAddress { get; set; }
        public string LastPosition { get; set; }
        public RecommendationDetail RecommendationDetails { get; set; }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
